/*

Given a string (sequence of characters) of length n, generate all of its subsequences. 

A subsequence of a given string (sequence) is a string (sequence) that is generated by 
removing zero or more characters from the given string (sequence) without changing its 
order.

Example
	
	Input : inp[] = "abc"
	Output: ["", "c", "b", "bc", "a", "ac", "ab", "abc"]

*/

#include<iostream>

using namespace std;

void generateSubsequences(char* inp, int i, char* out, int j) {
	// base case
	if(inp[i] == '\0') {
		out[j] = '\0';
		cout << out << endl;
		return;
	}

	// recursive case

	// you're standing at the ith characters and trying to make a decision

	// include the ith character
	out[j] = inp[i];
	generateSubsequences(inp, i+1, out, j+1);

	// exclude the ith character
	generateSubsequences(inp, i+1, out, j);
}

int main() {

	char inp[10] = "abcd";
	char out[10];

	generateSubsequences(inp, 0, out, 0);

	return 0;
}
